services:

    vpn-gate:
        build: ./vpn_gate_service
        command: uvicorn main:app --host 0.0.0.0 --port 8000
        ports:
            - "8000:8000"
        env_file:
            - .env
        depends_on:
            db:
                condition: service_healthy
            rabbitmq:
                condition: service_healthy
        volumes:
            - ./vpn_gate_service:/app
            - ./vpn_gate_service/uploads:/app/uploads
        networks:
            - undergroundvpn

    db:
        image: postgres:15
        env_file:
            - .env
        ports:
            - "5432:5432"
        networks:
            - undergroundvpn
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
            interval: 5s
            timeout: 5s
            retries: 5
        volumes:
            - postgres_data:/var/lib/postgresql/data
        environment:
            POSTGRES_LOGGING_COLLECTOR: "off"
        logging:
            driver: "none"

    rabbitmq:
        image: rabbitmq:3-management
        container_name: rabbitmq
        ports:
        - "5672:5672"
        - "15672:15672"
        env_file:
            - .env
        networks:
            - undergroundvpn
        healthcheck:
            test: ["CMD", "rabbitmq-diagnostics", "ping"]
            interval: 10s
            timeout: 5s
            retries: 5
        environment:
            RABBITMQ_LOGS: "-"
            RABBITMQ_LOG_LEVEL: "warning"
        logging:
            driver: "none"
    telegram-bot:
        build: ./telegram_bot_service
        command: python main.py bot
        env_file:
            - .env
        depends_on:
            rabbitmq:
                condition: service_healthy
        networks:
            - undergroundvpn
    
    celery-worker:
        build: ./vpn_gate_service
        command: celery -A celery_app.app worker --loglevel=info
        env_file:
            - .env
        depends_on:
            rabbitmq:
                condition: service_healthy
            db:
                condition: service_healthy
        networks:
            - undergroundvpn
        volumes:
            - ./vpn_gate_service:/app

    celery-beat:
        build: ./vpn_gate_service
        command: celery -A celery_app.app beat --loglevel=info
        env_file:
            - .env
        depends_on:
            rabbitmq:
                condition: service_healthy
            db:
                condition: service_healthy
        networks:
            - undergroundvpn
        volumes:
            - ./vpn_gate_service:/app

volumes:
    postgres_data:

networks:
    undergroundvpn:
        external: true
